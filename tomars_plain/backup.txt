    $(".delete").click(function () {
        alert("problem");
        console.log(countries);
        var allowedCountries = $("#allowedCountries");
        countries = countries.filter(function (val, index, arr) {
            if (val != $(this).prev())
                return val;
        })
        $(this).prev().remove();
        $(this).remove();

onclick="deleteCountry()";
            function deleteCountry() {
        alert("problem");
        console.log(countries);
        var allowedCountries = $("#allowedCountries");
        countries = countries.filter(function (val, index, arr) {
            if (val != $(this).prev().val())
                return val;
        });
        $(this).prev().remove();
        $(this).remove();
        };

            $(".delete").click(function(){
        alert("bug");
    })

        $(document).ready(function(){   
        $(".delete").click(function () {
        alert("problem");
        console.log(countries);
        var allowedCountries = $("#allowedCountries");
        countries = countries.filter(function (val, index, arr) {
            if (val != $(this).prev())
                return val;
        })
        $(this).prev().remove();
        $(this).remove();
     }
     )})

             //var countrySelected = $("#countries option:selected").text();
        //var added = $("<input name='Countries Allowed'></input>").val(countrySelected);
        
        //if (countries.includes(countrySelected)) {

            //alert(123);
            //allowedCountries.val(allowedCountries.val().replace(countrySelected, ''));
        //} else { 
            //alert("No such country exists in the list.") 
            //}


        //console.log($("#allowedCountries").val());
        //alert($("#countries option:selected").text());
        //alert($("#allowedCountries").val());

                    //console.log(allowedCountries.toString());
        //var existed='';
        //if(allowedCountries.length > 0){
        //    for(item in allowedCountries){existed += item.val()};
        //}   

            $( document ).ready(function(){
        
        $("#origin").val("{{mission.origin}}");
    }
    )

textarea {
        vertical-align: middle;
        text-align: left;
    } 


$(document).ready(function(){

  $("input[name='username']").keyup(function(){

    alert("test");
    $.get("http://localhost:8080/api/user/hasDuplicateUsername", $("input[name='username']").val(), function(data){
        var message = $("#message");
        if(data==0){
            message.text("Username already taken");
        }
        else{
            message.text("Username available");
        }
    }, 'jsonp')
  }
)
});

   headers: {
    'X-CSRFToken': $.cookie('csrftoken')
  },


    $("input[name='username']").keyup(function(){
alert($("input[name='username']").val());
console.log(typeof($("input[name='username']").val()))

    $.ajax(
        {
   type: 'GET',
   crossDomain: true,
   contentType:"application/json",
   dataType: 'jsonp text',
   processData:false,
   url: 'http://localhost:8080/api/user/hasDuplicateUsername',
   data: JSON.stringify($("input[name='username']").val()),
   success: function(data){
        var message = $("#message");
        if(data==0){
            message.text("Username already taken");
        }
        else{
            message.text("Username available");
        }
    }
    }
    )

  }


      axios.get("http://localhost:8080/api/user/hasDuplicateUsername", req.body["username"], config).then(function(response){
            res.send(response.data);
          }).catch(error => {
            console.log(error)
          })



          <style>
        .positiveBtn {
            background-color: #4CAF50;
            color: white;

        }

        .negativeBtn {
            background-color: red;
            color: white;
        }

        #box {
            position: fixed;
            right: 2%;
            top: 2%;
        }

        button {
            text-align: center;
            display: inline-block;
            font-size: large;


        }

        button:hover {
            opacity: 0.8;
        }

        fieldset {
            margin: auto;
            width: 800px;
            margin-top: 200px;
            text-align: center;

        }

        span {
            display: block;
            margin: 20px;
        }
    </style>